/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ../../src/wx.i

#ifndef SWIG_wx_WRAP_H_
#define SWIG_wx_WRAP_H_

class Swig_memory;

class SwigDirector_GoCallbackDispatcher : public wxGoCallbackDispatcher
{
 public:
  SwigDirector_GoCallbackDispatcher(int swig_p);
  virtual ~SwigDirector_GoCallbackDispatcher();
  void _swig_upcall_QueueEvent(wxEvent *event) {
    wxEvtHandler::QueueEvent(event);
  }
  virtual void QueueEvent(wxEvent *event);
  void _swig_upcall_AddPendingEvent(wxEvent const &event) {
    wxEvtHandler::AddPendingEvent(event);
  }
  virtual void AddPendingEvent(wxEvent const &event);
  bool _swig_upcall_ProcessEvent(wxEvent &event) {
    return wxEvtHandler::ProcessEvent(event);
  }
  virtual bool ProcessEvent(wxEvent &event);
  bool _swig_upcall_SearchEventTable(wxEventTable &table, wxEvent &event) {
    return wxEvtHandler::SearchEventTable(table,event);
  }
  virtual bool SearchEventTable(wxEventTable &table, wxEvent &event);
  void _swig_upcall_SetNextHandler(wxEvtHandler *handler) {
    wxEvtHandler::SetNextHandler(handler);
  }
  virtual void SetNextHandler(wxEvtHandler *handler);
  void _swig_upcall_SetPreviousHandler(wxEvtHandler *handler) {
    wxEvtHandler::SetPreviousHandler(handler);
  }
  virtual void SetPreviousHandler(wxEvtHandler *handler);
  virtual void Callback(wxEvent &event);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
